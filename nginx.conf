# nginx.conf - front-end HTTP service

# For Alpine Linux servers, install this file into
# /etc/nginx/conf.d/default.conf

# Nginx documentation: https://nginx.org/en/docs/

add_header Content-Security-Policy "frame-ancestors 'self'";

# One writer, potentially multiple readers-- and let OS scheduler
# facilitate multiprocessing (without Python GIL limitations)
upstream url_shortener_writer_app {
  server 127.0.0.1:8000;
  #server 127.0.0.1:8001 backup;
}
upstream url_shortener_read_only_app {
  server 127.0.0.1:8010;
  server 127.0.0.1:8011;
  server 127.0.0.1:8012;
  server 127.0.0.1:8013;
  server 127.0.0.1:8014;
}

server {
  listen 80  default_server;
  listen [::]:80  default_server;

  server_name _;

  root /var/www/html;

  # Sequence of `location` configuration is significant:

  location = / {
    rewrite . /_v1/home.html break;
  }
  location = /style.css {
    rewrite . /_v1/style.css break;
  }
  location = /_v1/shorten {
    proxy_pass http://url_shortener_writer_app;
    expires -1d;
    break;
  }
  location /_v1/ {
    try_files $uri $uri.html $uri/ =404;
    charset utf-8;
  }
  location = /favicon.ico {
    internal; access_log /dev/null; error_log /dev/null; break;
  }
  location = /robots.txt {
    internal; access_log /dev/null; error_log /dev/null; break;
  }
  location / {
    proxy_pass http://url_shortener_read_only_app;
    expires -1d;
    break;
  }
}
